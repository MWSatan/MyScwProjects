<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--    自动扫描mvc-->
    <context:component-scan base-package="com.XYF.crowd.api"/>

    <!--    配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">

        <!--        前缀-->
        <property name="prefix" value="/WEB-INF/"/>
        <!--        后缀-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--    添加注解驱动-->
    <mvc:annotation-driven/>
    <!--
      1. 响应ajax请求，返回json
      2. 解决静态资源访问问题。
    -->
    <mvc:default-servlet-handler/>

    <mvc:resources  location="/css/" mapping="/css/**"  />
    <mvc:resources  location="/fonts/" mapping="/fonts/**"  />
    <mvc:resources  location="/bootstrap/" mapping="/bootstrap/**"  />
    <mvc:resources  location="/img/" mapping="/img/**"  />
    <mvc:resources  location="/jquery/" mapping="/jquery/**"  />
    <mvc:resources  location="/layer/" mapping="/layer/**"  />
    <mvc:resources  location="/script/" mapping="/script/**"  />


    <!--基于xml的异常映射-->

    <bean id="simpleMappingException" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
<!--        配置异常机制和具体视图页面的对应关系-->
        <property name="exceptionMappings">
            <props>
<!--                key指定异常全类名-->
<!--                标签内写对应的视图，这个值需要拼前后缀得到具体路径（即需要配置视图解析器）-->
<!--                配置完成后若出现错误，异常信息会放到请求域中，在错误提示页面可以从请求域中取出来-->
                <prop key="java.lang.Exception">error</prop>
            </props>
        </property>
    </bean>


<!--    配置view-controller,直接把请求地址和视图名称关联起来，不必写handler方法了-->
<!--
   @RequestMapping("...")
   public String toLoginPage(){
        return "admin-login";
   }

   这个代替掉了上面的代码
-->
    <mvc:view-controller path="/login/page.html" view-name="admin-login" />
 </beans>